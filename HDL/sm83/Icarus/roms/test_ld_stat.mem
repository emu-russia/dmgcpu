// Read STAT in a loop. The STAT register will eventually change during a
// write, and the CPU will read the AND of all different values driven in the
// bus.

@0100     // .ORG   $100   
00        // NOP   

3E aa     // LD   A,$f0    // bit 8=1: PPU on (although Bogus_HW does not simulate that)
e0 40     // LDH  [$40],A  // STAT <= A

f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
f0 40     // LDH  A,[$40] // A <= STAT
c3 05 01  // JP $0105
