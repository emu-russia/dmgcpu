#pragma once

namespace sm83
{
	// @Gekkio designations.

	// Decoder1

	#define s1_op_ld_nn_a_s010 st->d[0]
	#define s1_op_ld_a_nn_s010 st->d[1]
	#define s1_op_ld_a_nn_s011 st->d[2]
	#define s1_op_alu8 st->d[3]
	#define s1_op_jp_cc_sx01 st->d[4]
	#define s1_op_call_cc_sx01 st->d[5]
	#define s1_op_ret_cc_sx00 st->d[6]
	#define s1_op_jr_cc_sx00 st->d[7]
	#define s1_op_ldh_a_x st->d[8]
	#define s1_op_call_any_s000 st->d[9]
	#define s1_op_call_any_s001 st->d[10]
	#define s1_op_call_any_s010 st->d[11]
	#define s1_op_call_any_s011 st->d[12]
	#define s1_op_call_any_s100 st->d[13]
	#define s1_op_ld_x_n st->d[14]
	#define s1_op_ld_x_n_sx00 st->d[15]
	#define s1_op_ld_r_n_sx01 st->d[16]
	#define s1_op_s110 st->d[17]
	#define s1_op_s111 st->d[18]
	#define s1_op_jr_any_sx01 st->d[19]
	#define s1_op_jr_any_sx00 st->d[20]
	#define s1_op_add_sp_e_s010 st->d[21]
	#define s1_op_ld_hl_sp_sx10 st->d[22]
	#define s1_cb_res_r_sx00 st->d[23]
	#define s1_cb_res_hl_sx01 st->d[24]
	#define s1_op_rotate_a st->d[25]
	#define s1_op_ld_a_rr_sx01 st->d[26]
	#define s1_cb_bit st->d[27]
	#define s1_op_ld_rr_a_sx00 st->d[28]
	#define s1_op_ld_a_rr_sx00 st->d[29]
	#define s1_op_ldh_c_a_sx00 st->d[30]
	#define s1_op_ldh_n_a_sx00 st->d[31]
	#define s1_op_ldh_n_a_sx01 st->d[32]
	#define s1_op_ld_r_hl_sx00 st->d[33]
	#define s1_op_alu_misc_s0xx st->d[34]
	#define s1_op_add_hl_sxx0 st->d[35]
	#define s1_op_dec_rr_sx00 st->d[36]
	#define s1_op_inc_rr_sx00 st->d[37]
	#define s1_op_push_sx01 st->d[38]
	#define s1_op_push_sx00 st->d[39]
	#define s1_op_ld_r_r_s0xx st->d[40]
	#define s1_op_40_to_7f st->d[41]
	#define s1_cb_00_to_3f st->d[42]
	#define s1_op_jp_any_sx00 st->d[43]
	#define s1_op_jp_any_sx01 st->d[44]
	#define s1_op_jp_any_sx10 st->d[45]
	#define s1_op_add_hl_sx01 st->d[46]
	#define s1_op_ld_hl_n_sx01 st->d[47]
	// [!] d48, 49 are skipped
	#define s1_op_push_sx10 st->d[50]
	#define s1_op_pop_sx00 st->d[51]
	#define s1_op_pop_sx01 st->d[52]
	#define s1_op_add_sp_s001 st->d[53]
	#define s1_op_ld_hl_sp_sx01 st->d[54]
	#define s1_cb_set_r_sx00 st->d[55]
	#define s1_cb_set_hl_sx01 st->d[56]
	#define s1_cb_set_res_hl_sx00 st->d[57]
	#define s1_op_pop_sx10 st->d[58]
	#define s1_op_ldh_a_n_sx01 st->d[59]
	#define s1_op_ld_nn_sp_s010 st->d[60]
	#define s1_op_ld_nn_sp_s000 st->d[61]
	#define s1_op_ld_sp_hl_sx00 st->d[62]
	#define s1_op_add_sp_e_s000 st->d[63]
	#define s1_op_add_sp_e_s011 st->d[64]
	#define s1_op_ld_hl_sp_sx00 st->d[65]
	#define s1_op_ld_nn_sp_s011 st->d[66]
	#define s1_op_ld_nn_sp_s001 st->d[67]
	#define s1_op_ld_hl_r_sx00 st->d[68]
	#define s1_op_incdec8_hl_sx00 st->d[69]
	#define s1_op_incdec8_hl_sx01 st->d[70]
	#define s1_op_ldh_a_c_sx00 st->d[71]
	#define s1_op_ldh_a_n_sx00 st->d[72]
	#define s1_op_rst_sx01 st->d[73]
	#define s1_op_rst_sx00 st->d[74]
	#define s1_int_s101 st->d[75]
	#define s1_int_s100 st->d[76]
	#define s1_int_s000 st->d[77]
	#define s1_op_80_to_bf_reg_s0xx st->d[78]
	#define s1_op_ret_reti_sx00 st->d[79]
	#define s1_op_ret_cc_sx01 st->d[80]
	#define s1_op_jp_hl_s0xx st->d[81]
	#define s1_op_ret_any_reti_s010 st->d[82]
	#define s1_op_ret_any_reti_s011 st->d[83]
	#define s1_op_ld_hlinc_sx00 st->d[84]
	#define s1_op_ld_hldec_sx00 st->d[85]
	#define s1_op_ld_rr_sx00 st->d[86]
	#define s1_op_ld_rr_sx01 st->d[87]
	#define s1_op_ld_rr_sx10 st->d[88]
	#define s1_op_incdec8_s0xx st->d[89]
	#define s1_op_alu_hl_sx00 st->d[90]
	#define s1_op_alu_n_sx00 st->d[91]
	#define s1_op_rst_sx10 st->d[92]
	#define s1_int_s110 st->d[93]
	#define s1_cb_r_s0xx st->d[94]
	#define s1_cb_hl_sx00 st->d[95]
	#define s1_cb_bit_hl_sx01 st->d[96]
	#define s1_cb_notbit_hl_sx01 st->d[97]
	#define s1_op_incdec8 st->d[98]
	#define s1_op_di_ei_s0xx st->d[99]
	#define s1_op_halt_s0xx st->d[100]
	#define s1_op_nop_stop_s0xx st->d[101]
	#define s1_op_cb_s0xx st->d[102]
	#define s1_op_jr_any_sx10 st->d[103]
	#define s1_op_ea_fa_s000 st->d[104]
	#define s1_op_ea_fa_s001 st->d[105]
	// [!] d106 skipped

	// Decoder2

	#define s2_cc_check st->w[0]
	#define s2_oe_wzreg_to_idu st->w[1]
	#define s2_op_jr_any_sx10 st->w[2]
	#define s2_op_alu8 st->w[3]
	#define s2_op_ld_abs_a_data_cycle st->w[4]
	#define s2_op_ld_a_abs_data_cycle st->w[5]
	#define s2_wr st->w[6]
	// 7 skipped
	#define s2_op_jr_any_sx01 st->w[8]
	#define s2_op_sp_e_sx10 st->w[9]
	#define s2_alu_res st->w[10]
	#define s2_addr_valid st->w[11]
	#define s2_cb_bit st->w[12]
	#define s2_op_ld_abs_rr_sx00 st->w[13]
	#define s2_op_ldh_any_a_data_cycle st->w[14]
	#define s2_op_add_hl_sxx0 st->w[15]
	#define s2_op_incdec_rr st->w[16]
	#define s2_op_ldh_imm_sx01 st->w[17]
	// gekkio order: org w20 -> org w18 -> org w19
	#define s2_state0_next st->w[20]
	#define s2_data_fetch_cycle st->w[18]
	#define s2_op_add_hl_sx01 st->w[19]
	//
	#define s2_op_push_sx10 st->w[21]
	#define s2_addr_hl st->w[22]
	#define s2_op_sp_e_s001 st->w[23]
	#define s2_alu_set st->w[24]
	#define s2_addr_pc st->w[25]
	#define s2_m1 st->w[26]
	#define s2_op_ld_nn_sp_s01x st->w[27]
	#define s2_oe_pchreg_to_pbus st->w[28]
	#define s2_op_ldh_c_sx00 st->w[29]
	#define s2_stackop st->w[30]
	#define s2_idu_inc st->w[31]
	#define s2_state2_next st->w[32]
	#define s2_state1_next st->w[33]
	#define s2_oe_pclreg_to_pbus st->w[34]
	#define s2_idu_dec st->w[35]
	#define s2_oe_wzreg_to_pcreg st->w[36]
	#define s2_op_incdec8 st->w[37]
	#define s2_allow_r8_write st->w[38]
	// 39,40 out of scope

	// Decoder3

	#define s3_alu_rotate_shift_left st->x[0]
	#define s3_alu_rotate_shift_right st->x[1]
	#define s3_alu_set_or st->x[2]
	#define s3_alu_sum st->x[3]
	#define s3_alu_logic_or st->x[4]
	#define s3_alu_rlc st->x[5]
	#define s3_alu_rl st->x[6]
	#define s3_alu_rrc st->x[7]
	#define s3_alu_rr st->x[8]
	#define s3_alu_sra st->x[9]
	#define s3_alu_sum_pos_hf_cf st->x[10]
	#define s3_alu_sum_neg_cf st->x[11]
	#define s3_alu_sum_neg_hf_nf st->x[12]
	#define s3_regpair_wren st->x[13]
	#define s3_alu_to_reg st->x[14]
	#define s3_oe_rbus_to_pbus st->x[15]
	#define s3_alu_swap st->x[16]
	#define s3_cb_20_to_3f st->x[17]
	#define s3_alu_xor st->x[18]
	#define s3_alu_logic_and st->x[19]
	#define s3_rotate st->x[20]
	#define s3_alu_ccf_scf st->x[21]
	#define s3_alu_daa st->x[22]
	#define s3_alu_add_adc st->x[23]
	#define s3_alu_sub_sbc st->x[24]
	#define s3_alu_b_complement st->x[25]
	#define s3_alu_cpl st->x[26]
	#define s3_alu_cp st->x[27]
	#define s3_wren_cf st->x[28]
	#define s3_wren_hf_nf_zf st->x[29]
	#define s3_op_add_sp_e_sx10 st->x[30]
	#define s3_op_add_sp_e_s001 st->x[31]
	#define s3_op_alu_misc_a st->x[32]
	#define s3_op_dec8 st->x[33]
	#define s3_alu_reg_to_rbus st->x[34]
	#define s3_oe_areg_to_rbus st->x[35]
	#define s3_cb_wren_r st->x[36]
	#define s3_oe_alu_to_pbus st->x[37]
	#define s3_wren_a st->x[38]
	#define s3_wren_h st->x[39]
	#define s3_wren_l st->x[40]
	#define s3_op_reti_s011 st->x[41]
	#define s3_oe_hlreg_to_idu st->x[42]
	#define s3_oe_hreg_to_rbus st->x[43]
	#define s3_oe_lreg_to_rbus st->x[44]
	#define s3_oe_dereg_to_idu st->x[45]
	#define s3_oe_dreg_to_rbus st->x[46]
	#define s3_oe_ereg_to_rbus st->x[47]
	#define s3_wren_d st->x[48]
	#define s3_wren_b st->x[49]
	#define s3_wren_e st->x[50]
	#define s3_wren_c st->x[51]
	#define s3_oe_bcreg_to_idu st->x[52]
	#define s3_oe_breg_to_rbus st->x[53]
	#define s3_oe_creg_to_rbus st->x[54]
	#define s3_oe_idu_to_uhlbus st->x[55]
	#define s3_oe_wzreg_to_uhlbus st->x[56]
	#define s3_oe_ubus_to_uhlbus st->x[57]
	#define s3_oe_zreg_to_rbus st->x[58]
	#define s3_wren_w st->x[59]
	#define s3_wren_z st->x[60]
	#define s3_wren_sp st->x[61]
	#define s3_oe_idu_to_spreg st->x[62]
	#define s3_oe_wzreg_to_spreg st->x[63]
	#define s3_op_ld_hl_sp_e_s010 st->x[64]
	#define s3_oe_spreg_to_idu st->x[65]
	#define s3_op_ld_hl_sp_e_s001 st->x[66]
	#define s3_oe_idu_to_pcreg st->x[67]
	#define s3_wren_pc st->x[68]
}